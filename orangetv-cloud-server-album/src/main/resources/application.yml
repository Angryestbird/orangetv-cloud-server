server:
  port: 9700

eureka:
  instance:
    hostname: ${HOSTNAME:localhost}

spring:
  application:
    name: @name@
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/orangetv
    username: user
    password: pass
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9500
      client:
        registration:
          orangetv-cloud-server-album:
            provider: spring
            client-name: Orange Cloud TV
            client-id: orangetv-cloud-server-album
            client-secret: orangetv-cloud-server-album
            authorization-grant-type: client_credentials
            scope: openid,video.metadata.read,video.metadata.write
        provider:
          spring:
            issuer-uri: http://localhost:9500

  kafka:
    bootstrap-servers: host.docker.internal:9095
  data:
    mongodb:
      gridfs:
        database: album-store
      uri: mongodb://root:example@host.docker.internal
      database: album-store

orangetv:
  root-path: ${SCAN_PATH:D:\Video\videocache}
  app-id: orangetv-album-service-0

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: TRACE
    org.springframework.security.oauth2: TRACE
#    org.springframework.boot.autoconfigure:

management:
  endpoints:
    web:
      exposure:
        include: health,info

# spring-security-oauth is no longer actively maintained
#feign:
#  oauth2:
#    enabled: true
